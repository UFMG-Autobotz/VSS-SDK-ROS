// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debug.proto

#ifndef PROTOBUF_debug_2eproto__INCLUDED
#define PROTOBUF_debug_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace vss_debug {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_debug_2eproto();
void protobuf_AssignDesc_debug_2eproto();
void protobuf_ShutdownFile_debug_2eproto();

class Pose;
class Path;
class Global_Debug;

// ===================================================================

class Pose : public ::google::protobuf::Message {
 public:
  Pose();
  virtual ~Pose();

  Pose(const Pose& from);

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose& default_instance();

  void Swap(Pose* other);

  // implements Message ----------------------------------------------

  Pose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // optional float yaw = 4;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 4;
  inline float yaw() const;
  inline void set_yaw(float value);

  // @@protoc_insertion_point(class_scope:vss_debug.Pose)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_yaw();
  inline void clear_has_yaw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float yaw_;
  friend void  protobuf_AddDesc_debug_2eproto();
  friend void protobuf_AssignDesc_debug_2eproto();
  friend void protobuf_ShutdownFile_debug_2eproto();

  void InitAsDefaultInstance();
  static Pose* default_instance_;
};
// -------------------------------------------------------------------

class Path : public ::google::protobuf::Message {
 public:
  Path();
  virtual ~Path();

  Path(const Path& from);

  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Path& default_instance();

  void Swap(Path* other);

  // implements Message ----------------------------------------------

  Path* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Path& from);
  void MergeFrom(const Path& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .vss_debug.Pose poses = 2;
  inline int poses_size() const;
  inline void clear_poses();
  static const int kPosesFieldNumber = 2;
  inline const ::vss_debug::Pose& poses(int index) const;
  inline ::vss_debug::Pose* mutable_poses(int index);
  inline ::vss_debug::Pose* add_poses();
  inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >&
      poses() const;
  inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >*
      mutable_poses();

  // @@protoc_insertion_point(class_scope:vss_debug.Path)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose > poses_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_debug_2eproto();
  friend void protobuf_AssignDesc_debug_2eproto();
  friend void protobuf_ShutdownFile_debug_2eproto();

  void InitAsDefaultInstance();
  static Path* default_instance_;
};
// -------------------------------------------------------------------

class Global_Debug : public ::google::protobuf::Message {
 public:
  Global_Debug();
  virtual ~Global_Debug();

  Global_Debug(const Global_Debug& from);

  inline Global_Debug& operator=(const Global_Debug& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Global_Debug& default_instance();

  void Swap(Global_Debug* other);

  // implements Message ----------------------------------------------

  Global_Debug* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Global_Debug& from);
  void MergeFrom(const Global_Debug& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vss_debug.Pose step_poses = 1;
  inline int step_poses_size() const;
  inline void clear_step_poses();
  static const int kStepPosesFieldNumber = 1;
  inline const ::vss_debug::Pose& step_poses(int index) const;
  inline ::vss_debug::Pose* mutable_step_poses(int index);
  inline ::vss_debug::Pose* add_step_poses();
  inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >&
      step_poses() const;
  inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >*
      mutable_step_poses();

  // repeated .vss_debug.Pose final_poses = 2;
  inline int final_poses_size() const;
  inline void clear_final_poses();
  static const int kFinalPosesFieldNumber = 2;
  inline const ::vss_debug::Pose& final_poses(int index) const;
  inline ::vss_debug::Pose* mutable_final_poses(int index);
  inline ::vss_debug::Pose* add_final_poses();
  inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >&
      final_poses() const;
  inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >*
      mutable_final_poses();

  // repeated .vss_debug.Path paths = 3;
  inline int paths_size() const;
  inline void clear_paths();
  static const int kPathsFieldNumber = 3;
  inline const ::vss_debug::Path& paths(int index) const;
  inline ::vss_debug::Path* mutable_paths(int index);
  inline ::vss_debug::Path* add_paths();
  inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Path >&
      paths() const;
  inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Path >*
      mutable_paths();

  // @@protoc_insertion_point(class_scope:vss_debug.Global_Debug)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose > step_poses_;
  ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose > final_poses_;
  ::google::protobuf::RepeatedPtrField< ::vss_debug::Path > paths_;
  friend void  protobuf_AddDesc_debug_2eproto();
  friend void protobuf_AssignDesc_debug_2eproto();
  friend void protobuf_ShutdownFile_debug_2eproto();

  void InitAsDefaultInstance();
  static Global_Debug* default_instance_;
};
// ===================================================================


// ===================================================================

// Pose

// required uint32 id = 1;
inline bool Pose::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pose::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pose::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pose::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Pose::id() const {
  // @@protoc_insertion_point(field_get:vss_debug.Pose.id)
  return id_;
}
inline void Pose::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:vss_debug.Pose.id)
}

// required float x = 2;
inline bool Pose::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pose::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pose::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pose::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Pose::x() const {
  // @@protoc_insertion_point(field_get:vss_debug.Pose.x)
  return x_;
}
inline void Pose::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:vss_debug.Pose.x)
}

// required float y = 3;
inline bool Pose::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Pose::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Pose::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Pose::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Pose::y() const {
  // @@protoc_insertion_point(field_get:vss_debug.Pose.y)
  return y_;
}
inline void Pose::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:vss_debug.Pose.y)
}

// optional float yaw = 4;
inline bool Pose::has_yaw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Pose::set_has_yaw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Pose::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Pose::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline float Pose::yaw() const {
  // @@protoc_insertion_point(field_get:vss_debug.Pose.yaw)
  return yaw_;
}
inline void Pose::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:vss_debug.Pose.yaw)
}

// -------------------------------------------------------------------

// Path

// required uint32 id = 1;
inline bool Path::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Path::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Path::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Path::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Path::id() const {
  // @@protoc_insertion_point(field_get:vss_debug.Path.id)
  return id_;
}
inline void Path::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:vss_debug.Path.id)
}

// repeated .vss_debug.Pose poses = 2;
inline int Path::poses_size() const {
  return poses_.size();
}
inline void Path::clear_poses() {
  poses_.Clear();
}
inline const ::vss_debug::Pose& Path::poses(int index) const {
  // @@protoc_insertion_point(field_get:vss_debug.Path.poses)
  return poses_.Get(index);
}
inline ::vss_debug::Pose* Path::mutable_poses(int index) {
  // @@protoc_insertion_point(field_mutable:vss_debug.Path.poses)
  return poses_.Mutable(index);
}
inline ::vss_debug::Pose* Path::add_poses() {
  // @@protoc_insertion_point(field_add:vss_debug.Path.poses)
  return poses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >&
Path::poses() const {
  // @@protoc_insertion_point(field_list:vss_debug.Path.poses)
  return poses_;
}
inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >*
Path::mutable_poses() {
  // @@protoc_insertion_point(field_mutable_list:vss_debug.Path.poses)
  return &poses_;
}

// -------------------------------------------------------------------

// Global_Debug

// repeated .vss_debug.Pose step_poses = 1;
inline int Global_Debug::step_poses_size() const {
  return step_poses_.size();
}
inline void Global_Debug::clear_step_poses() {
  step_poses_.Clear();
}
inline const ::vss_debug::Pose& Global_Debug::step_poses(int index) const {
  // @@protoc_insertion_point(field_get:vss_debug.Global_Debug.step_poses)
  return step_poses_.Get(index);
}
inline ::vss_debug::Pose* Global_Debug::mutable_step_poses(int index) {
  // @@protoc_insertion_point(field_mutable:vss_debug.Global_Debug.step_poses)
  return step_poses_.Mutable(index);
}
inline ::vss_debug::Pose* Global_Debug::add_step_poses() {
  // @@protoc_insertion_point(field_add:vss_debug.Global_Debug.step_poses)
  return step_poses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >&
Global_Debug::step_poses() const {
  // @@protoc_insertion_point(field_list:vss_debug.Global_Debug.step_poses)
  return step_poses_;
}
inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >*
Global_Debug::mutable_step_poses() {
  // @@protoc_insertion_point(field_mutable_list:vss_debug.Global_Debug.step_poses)
  return &step_poses_;
}

// repeated .vss_debug.Pose final_poses = 2;
inline int Global_Debug::final_poses_size() const {
  return final_poses_.size();
}
inline void Global_Debug::clear_final_poses() {
  final_poses_.Clear();
}
inline const ::vss_debug::Pose& Global_Debug::final_poses(int index) const {
  // @@protoc_insertion_point(field_get:vss_debug.Global_Debug.final_poses)
  return final_poses_.Get(index);
}
inline ::vss_debug::Pose* Global_Debug::mutable_final_poses(int index) {
  // @@protoc_insertion_point(field_mutable:vss_debug.Global_Debug.final_poses)
  return final_poses_.Mutable(index);
}
inline ::vss_debug::Pose* Global_Debug::add_final_poses() {
  // @@protoc_insertion_point(field_add:vss_debug.Global_Debug.final_poses)
  return final_poses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >&
Global_Debug::final_poses() const {
  // @@protoc_insertion_point(field_list:vss_debug.Global_Debug.final_poses)
  return final_poses_;
}
inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Pose >*
Global_Debug::mutable_final_poses() {
  // @@protoc_insertion_point(field_mutable_list:vss_debug.Global_Debug.final_poses)
  return &final_poses_;
}

// repeated .vss_debug.Path paths = 3;
inline int Global_Debug::paths_size() const {
  return paths_.size();
}
inline void Global_Debug::clear_paths() {
  paths_.Clear();
}
inline const ::vss_debug::Path& Global_Debug::paths(int index) const {
  // @@protoc_insertion_point(field_get:vss_debug.Global_Debug.paths)
  return paths_.Get(index);
}
inline ::vss_debug::Path* Global_Debug::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:vss_debug.Global_Debug.paths)
  return paths_.Mutable(index);
}
inline ::vss_debug::Path* Global_Debug::add_paths() {
  // @@protoc_insertion_point(field_add:vss_debug.Global_Debug.paths)
  return paths_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::vss_debug::Path >&
Global_Debug::paths() const {
  // @@protoc_insertion_point(field_list:vss_debug.Global_Debug.paths)
  return paths_;
}
inline ::google::protobuf::RepeatedPtrField< ::vss_debug::Path >*
Global_Debug::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:vss_debug.Global_Debug.paths)
  return &paths_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vss_debug

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_debug_2eproto__INCLUDED
